<div class="block">
<h4 class="shadow">テストケースについて</h4>
<p>
    2018/01/20 15時追記<br>
    <code>4bamboo</code>ケースで落ちている方は，<code>4bamboo</code>を確認すると参考になるかもしれません．<br>
</p>
<h4 class="shadow">解説</h4>
<div>
<!--
\( 1+1\)
	div タグでも preタグでもお好きにどうぞ もちろんMathJaxが使えます。
-->
<p>
    問題を次のように言い換えます．
    <ui><li>
        $(x_1+y_1 t , x_2+y_2 t , x_3+y_3 t)$が門松列となるような時刻$t(0\le t)$が存在するか？
    </li></ui>
</p>
<br>
<p>
    標準入力から与えられる値は整数ですが，<!--これは罠で，-->サンプルの4つ目のテストケースの説明通り，3本の竹の長さが門松列になる時間帯が整数を含むとは限りません．
</p>
<br>
<p>
    まず，数列$(x_1,x_2,x_3)$が門松列である場合を考えます．<br>
    時刻$0$で門松列なので，YESです．
</p>
<p>
    数列$(y_1,y_2,y_3)$が門松列である場合を考えます．<br>
    時刻が$10^{10}$経過したとします．入力制約より$x_i$の値は影響しなくなり，$(y_1,y_2,y_3)$のみで決まります．<br>
    $(y_1,y_2,y_3)$は門松列なので，このケースもYESとなります．
</p>
<p>
    上２つのケースを除いた残りのケースについて考えます．<br>
    数列が門松列となるような時刻は，(もし存在するならば)1つの連続した区間です．<br>
    二分探索を適応して，門松列となる時刻を探し出せないでしょうか？
</p>
<p>
    <img src="https://buyoh.github.io/f/yukicoder/1478/bamboo.gif" />
</p>
<p>
    このgifは，$(x_1,x_2,x_3)=(9,7,2)$，$(y_1,y_2,y_3)=(1,3,4)$のケースを表現したものです．
</p>
<p>
    gifの例のように，もし🎍になる時刻が存在するケースならば，昇順→降順(または，降順→昇順)と切り替わる間に存在します<br>
    よって，昇順→降順(または，降順→昇順)と切り替わる間を二分探索しながら，🎍かどうか判定するプログラムを実装すればokです．
</p>
<br>
<p>
    writer解 : 
    <a href="https://yukicoder.me/submissions/165318">C++14</a> / 
    <a href="https://yukicoder.me/submissions/165317">Ruby</a>
</p>
<p>
    <a href="https://yukicoder.me/submissions/165107">format check</a>
</p>
</div>
<h4 class="shadow">別解</h4>
<div>
<a href="https://yukicoder.me/submissions/187140">全てのケースを場合分けでチェックする</a>ことにより，1つのテストケース当たりの計算量を$O(1)$まで落とすことが出来るようです．
</div>
<br>
<h4 class="shadow">おまけ</h4>
<div>
<ul>
    <li>線形探索をrejectするため，制限時間0.6秒くらいにしています．Rubyの有理数解法でも0.1秒程度なので，想定解ならば問題無いでしょう．</li>
    <li>X,Yを十分に大きくする方法でも線形探索をreject出来そうですが，double解法がWrongAnswerになる可能性があるので，制限時間で縛っています．</li>
    <li>ただし，VMの起動時間で落ちるかもしれません…(Scala等)</li>
</ul>
</div>
<br>
</div>
