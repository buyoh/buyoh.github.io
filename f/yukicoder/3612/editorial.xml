<div class="block">
<h4 class="shadow">解説</h4>
<div>
<!--
$ 1+1$
	div タグでも preタグも もちろんMathJaxが使えます。
-->
<h5 class="shadow">考察1</h5>
<p>
    時間制限から、次の問題が高速に (O(1)かO(logN)ぐらいで) 解ければ嬉しい、という方針で考察をすすめる。
</p>
<ul>
    <li>2点が与えられる。Oが三角形の内部に入るような、あと1点の選び方は何通り？</li>
</ul>

<h5 class="shadow">考察2</h5>
<p>
    三角形の2頂点が既に決まっているとする。O が三角形の内部に入るように残り1点を選ぶとしたら、どの領域にある頂点を取り出せば良いか考えてみる。
</p>
<p>
    作図してみると、直線AO,BOを引いたとき、A,Bが無い側の扇状の領域から選べば良いことが分かる。
</p>
<div><img src="https://buyoh.github.io/f/yukicoder/3612/geogebra-export.png"></div>

<h5 class="shadow">考察3</h5>
<p>
    要は、Oを中心とする扇状の領域に点がいくつあるか、高速に求められれば良い。<br>  
    各点を偏角でソートしておき、二分探索やしゃくとり法をすれば個数が求まる。
</p>

<h5>実装</h5>
<p>
    3点が直線状に並ぶパターン等を考慮しなければならないため、実装が複雑になるかもしれません。<br>
    Writer解では、偏角を有理数の tan で保持しています。
</p>
<p>
    もっと楽なアイデアがあればブログ記事お願いします。
</p>
</div>
<br>
<h4 class="shadow">note</h4>
<p>
    topcoder に似た問題があるという指摘をtesterさんから頂きました。過去問検索力が足りない…<br>
    <a href="https://community.topcoder.com/stat?c=problem_statement&pm=13309">https://community.topcoder.com/stat?c=problem_statement&pm=13309</a>
</p>
<p>
    先駆者には、No three points will be collinear. や Each element of x and y will be between -10,000 and 10,000, inclusive. との制約があるので、<br>
    単純にatan2でソートして二分探索で出来る感じです。
</p>
<p>
    代替案が思い浮かばなかったので、このまま出題しました。うーん。
</p>

</div>
